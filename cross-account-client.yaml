AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a cross account role for Security Account at client account

Parameters:
  SecurityAccountNumber:
    AllowedPattern: '[0-9]+'
    Description: The 12 digit AWS account number of Security Account.
    MaxLength: '12'
    MinLength: '12'
    Type: String

  CreateAdminAccess:
    Description: Select if Admin access can be provided
    Default: yes
    Type: String
    AllowedValues: [yes, no]
    ConstraintDescription: must specify yes or no

  CreatePowerAccess:
    Description: Select if Power access can be provided
    Default: yes
    Type: String
    AllowedValues: [yes, no]
    ConstraintDescription: must specify yes or no

  CreateReadOnlyAccess:
    Description: Select if Read access can be provided
    Default: yes
    Type: String
    AllowedValues: [yes, no]
    ConstraintDescription: must specify yes or no

Conditions:
  CreateAdminResources: !Equals [!Ref CreateAdminAccess, yes]
  CreatePowerResources: !Equals [!Ref CreatePowerAccess, yes]
  CreateReadonlyResources: !Equals [!Ref CreateReadOnlyAccess, yes]

Resources:
  AdminRole:
    Type: 'AWS::IAM::Role'
    Condition: CreateAdminResources
    Properties:
      RoleName: 'Security-Admin'
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS: !Join [ "", [ 'arn:aws:iam::' , !Ref 'SecurityAccountNumber' , ':root' ] ]
            Sid: ''
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - '*'
                Effect: Allow
                Resource: '*'
                Sid: Stmt1434989080227
            Version: '2012-10-17'
          PolicyName: AdminRole


  PowerRole:
    Type: 'AWS::IAM::Role'
    Condition: CreatePowerResources
    Properties:
      RoleName: 'Security-Power'
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS: !Join [ "", [ 'arn:aws:iam::' , !Ref 'SecurityAccountNumber' , ':root' ] ]
            Sid: ''
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                NotAction:
                  - 'iam:*'
                  - 'organizations:*'
                Resource: '*'
              - Effect: Allow
                Action: 'organizations:DescribeOrganization'
                Resource: '*'
          PolicyName: Security-Power


  ReadonlyRole:
    Type: 'AWS::IAM::Role'
    Condition: CreateReadonlyResources
    Properties:
      RoleName: 'Security-ReadonlyRole'
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS: !Join [ "", [ 'arn:aws:iam::' , !Ref 'SecurityAccountNumber' , ':root' ] ]
            Sid: ''
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'acm:DescribeCertificate'
                  - 'acm:GetCertificate'
                  - 'acm:ListCertificates'
                  - 'acm:ListTagsForCertificate'
                  - 'apigateway:GET'
                  - 'application-autoscaling:Describe*'
                  - 'appstream:Get*'
                  - 'autoscaling:Describe*'
                  - 'cloudformation:Describe*'
                  - 'cloudformation:Get*'
                  - 'cloudformation:List*'
                  - 'cloudfront:Get*'
                  - 'cloudfront:List*'
                  - 'cloudsearch:Describe*'
                  - 'cloudsearch:List*'
                  - 'cloudtrail:DescribeTrails'
                  - 'cloudtrail:GetTrailStatus'
                  - 'cloudtrail:LookupEvents'
                  - 'cloudtrail:ListTags'
                  - 'cloudtrail:ListPublicKeys'
                  - 'cloudwatch:Describe*'
                  - 'cloudwatch:Get*'
                  - 'cloudwatch:List*'
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:BatchGetProjects'
                  - 'codebuild:List*'
                  - 'codecommit:BatchGetRepositories'
                  - 'codecommit:Get*'
                  - 'codecommit:GitPull'
                  - 'codecommit:List*'
                  - 'codedeploy:Batch*'
                  - 'codedeploy:Get*'
                  - 'codedeploy:List*'
                  - 'config:Deliver*'
                  - 'config:Describe*'
                  - 'config:Get*'
                  - 'config:List*'
                  - 'datapipeline:DescribeObjects'
                  - 'datapipeline:DescribePipelines'
                  - 'datapipeline:EvaluateExpression'
                  - 'datapipeline:GetAccountLimits'
                  - 'datapipeline:GetPipelineDefinition'
                  - 'datapipeline:ListPipelines'
                  - 'datapipeline:QueryObjects'
                  - 'datapipeline:ValidatePipelineDefinition'
                  - 'directconnect:Describe*'
                  - 'dms:Describe*'
                  - 'dms:List*'
                  - 'ds:Check*'
                  - 'ds:Describe*'
                  - 'ds:Get*'
                  - 'ds:List*'
                  - 'ds:Verify*'
                  - 'dynamodb:BatchGetItem'
                  - 'dynamodb:DescribeLimits'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:ListTables'
                  - 'dynamodb:Query'
                  - 'dynamodb:Scan'
                  - 'ec2:Describe*'
                  - 'ec2:GetConsoleOutput'
                  - 'ec2:GetConsoleScreenshot'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:BatchGetImage'
                  - 'ecr:Describe*'
                  - 'ecr:Get*'
                  - 'ecr:List*'
                  - 'ecs:Describe*'
                  - 'ecs:List*'
                  - 'elasticache:Describe*'
                  - 'elasticache:List*'
                  - 'elasticbeanstalk:Check*'
                  - 'elasticbeanstalk:Describe*'
                  - 'elasticbeanstalk:List*'
                  - 'elasticbeanstalk:RequestEnvironmentInfo'
                  - 'elasticbeanstalk:RetrieveEnvironmentInfo'
                  - 'elasticfilesystem:Describe*'
                  - 'elasticloadbalancing:Describe*'
                  - 'elasticmapreduce:Describe*'
                  - 'elasticmapreduce:List*'
                  - 'elastictranscoder:List*'
                  - 'elastictranscoder:Read*'
                  - 'es:DescribeElasticsearchDomain'
                  - 'es:DescribeElasticsearchDomains'
                  - 'es:DescribeElasticsearchDomainConfig'
                  - 'es:ListDomainNames'
                  - 'es:ListTags'
                  - 'es:ESHttpGet'
                  - 'es:ESHttpHead'
                  - 'events:DescribeRule'
                  - 'events:ListRuleNamesByTarget'
                  - 'events:ListRules'
                  - 'events:ListTargetsByRule'
                  - 'events:TestEventPattern'
                  - 'firehose:Describe*'
                  - 'firehose:List*'
                  - 'glacier:ListVaults'
                  - 'glacier:DescribeVault'
                  - 'glacier:GetDataRetrievalPolicy'
                  - 'glacier:GetVaultAccessPolicy'
                  - 'glacier:GetVaultLock'
                  - 'glacier:GetVaultNotifications'
                  - 'glacier:ListJobs'
                  - 'glacier:ListMultipartUploads'
                  - 'glacier:ListParts'
                  - 'glacier:ListTagsForVault'
                  - 'glacier:DescribeJob'
                  - 'glacier:GetJobOutput'
                  - 'health:Describe*'
                  - 'health:Get*'
                  - 'health:List*'
                  - 'iam:GenerateCredentialReport'
                  - 'iam:GenerateServiceLastAccessedDetails'
                  - 'iam:Get*'
                  - 'iam:List*'
                  - 'inspector:Describe*'
                  - 'inspector:Get*'
                  - 'inspector:List*'
                  - 'inspector:LocalizeText'
                  - 'inspector:PreviewAgentsForResourceGroup'
                  - 'iot:Describe*'
                  - 'iot:Get*'
                  - 'iot:List*'
                  - 'kinesisanalytics:DescribeApplication'
                  - 'kinesisanalytics:DiscoverInputSchema'
                  - 'kinesisanalytics:GetApplicationState'
                  - 'kinesisanalytics:ListApplications'
                  - 'kinesis:Describe*'
                  - 'kinesis:Get*'
                  - 'kinesis:List*'
                  - 'kms:Describe*'
                  - 'kms:Get*'
                  - 'kms:List*'
                  - 'lambda:List*'
                  - 'lambda:Get*'
                  - 'logs:Describe*'
                  - 'logs:Get*'
                  - 'logs:FilterLogEvents'
                  - 'logs:TestMetricFilter'
                  - 'machinelearning:Describe*'
                  - 'machinelearning:Get*'
                  - 'mobilehub:GetProject'
                  - 'mobilehub:ListAvailableFeatures'
                  - 'mobilehub:ListAvailableRegions'
                  - 'mobilehub:ListProjects'
                  - 'mobilehub:ValidateProject'
                  - 'mobilehub:VerifyServiceRole'
                  - 'opsworks:Describe*'
                  - 'opsworks:Get*'
                  - 'polly:Describe*'
                  - 'polly:Get*'
                  - 'polly:List*'
                  - 'polly:SynthesizeSpeech'
                  - 'rekognition:CompareFaces'
                  - 'rekognition:DetectFaces'
                  - 'rekognition:DetectLabels'
                  - 'rekognition:List*'
                  - 'rekognition:SearchFaces'
                  - 'rekognition:SearchFacesByImage'
                  - 'rds:Describe*'
                  - 'rds:ListTagsForResource'
                  - 'redshift:Describe*'
                  - 'redshift:ViewQueriesInConsole'
                  - 'route53:Get*'
                  - 'route53:List*'
                  - 'route53domains:CheckDomainAvailability'
                  - 'route53domains:GetDomainDetail'
                  - 'route53domains:GetOperationDetail'
                  - 'route53domains:ListDomains'
                  - 'route53domains:ListOperations'
                  - 'route53domains:ListTagsForDomain'
                  - 's3:Get*'
                  - 's3:List*'
                  - 'sdb:GetAttributes'
                  - 'sdb:List*'
                  - 'sdb:Select*'
                  - 'ses:Get*'
                  - 'ses:List*'
                  - 'shield:Describe*'
                  - 'shield:List*'
                  - 'sns:Get*'
                  - 'sns:List*'
                  - 'sqs:GetQueueAttributes'
                  - 'sqs:ListQueues'
                  - 'sqs:ReceiveMessage'
                  - 'ssm:Describe*'
                  - 'ssm:Get*'
                  - 'ssm:List*'
                  - 'storagegateway:Describe*'
                  - 'storagegateway:List*'
                  - 'swf:Count*'
                  - 'swf:Describe*'
                  - 'swf:Get*'
                  - 'swf:List*'
                  - 'tag:Get*'
                  - 'trustedadvisor:Describe*'
                  - 'waf:Get*'
                  - 'waf:List*'
                  - 'workspaces:Describe*'
                  - 'xray:BatchGetTraces'
                  - 'xray:Get*'
                Effect: Allow
                Resource: '*'

          PolicyName: Security-ReadOnlyRole

Outputs:
  AdminRoleARN:
    Description: The ARN of the role that can be assumed by the other account.
    Condition: CreateAdminResources
    Value: !GetAtt AdminRole.Arn

  PowerRoleARN:
    Description: The ARN of the role that can be assumed by the other account.
    Condition: CreatePowerResources
    Value: !GetAtt PowerRole.Arn

  ReadonlyRoleARN:
    Description: The ARN of the role that can be assumed by the other account.
    Condition: CreateReadonlyResources
    Value: !GetAtt ReadonlyRole.Arn
